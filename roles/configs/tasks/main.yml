---
# tasks file for configs
#
- name: Add hostname to new server
  hostname:
    name: "{{ SERVER_HOSTNAME }}"

- name: Put SELinux in permissive mode first.
  selinux:
    policy: targeted
    state: permissive

- name: Create a message of the day
  file:
    src: motd.txt
    dest: /etc/motd
    state: file

- name: Add desired ssh port to config
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: "^Port 22"
    line: "Port {{ SSHDPORT }}"
    insertafter: "^# What "
    state: present
  notify:
    - restart sshd

- name: set PermitRootLogin to no
  lineinfile:
    path: /etc/ssh/sshd_config
    insertafter: "^#PermitRootLogin without-password"
    line: "PermitRootLogin no"
    state: present
  notify:
    - restart sshd

- name: Add a maintenace account with full sudo 
  user:
    name: "{{ SERVICE_ACCOUNT }}"
    shell: /bin/bash
    groups: wheel
    append: yes

- name: Set authorized key for service account by copying it from current user
  authorized_key:
    user: "{{ SERVICE_ACCOUNT }}"
    state: present
    key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"

- name: Create a symbolic link to remove consistent network device naming
  file:
    src: /dev/null
    dest: /etc/udev/rules.d/80-net-name-slot.rules
    state: link

- name: Create a second symbolic link to remove consistent network device naming
  file:
    src: /dev/null
    dest: /etc/udev/rules.d/90-eno-fix.rules 
    state: link
    force: yes

- name: Validate the sudoers file before saving
  lineinfile:
    path: /etc/sudoers
    state: present
    regexp: '^%wheel'
    line: '%wheel ALL=(ALL) NOPASSWD: ALL' 
    validate: /usr/sbin/visudo -cf %s 

- name: Stop and disable NetworkManager
  service:
    name: NetworkManager
    enabled: no
    state:   stopped

- name: Disable ipv6 on the host
  lineinfile:
    path: /etc/sysctl.conf
    line: 'net.ipv6.conf.all.disable_ipv6 = 1'

- name: Disable ipv6 on the host 2
  lineinfile:
    path: /etc/sysctl.conf
    line: 'net.ipv6.conf.default.disable_ipv6 = 1'

- name: Genereate UUID for eth0
  shell: /usr/bin/uuidgen
  register: UUID_PRIMARY_INTERFACE

- name: Capture MAC for primary nic
  shell: cat /sys/class/net/en*/address
  register: mac_result

- name: Genereate template for primary nic
  template:
    src: interface.j2
    dest: /etc/sysconfig/network-scripts/ifcfg-eth0

- name: Remove eno interface files
  shell: /bin/rm -rf /etc/sysconfig/network-scripts/ifcfg-eno*

- name: Add grub entry for eth0
  lineinfile:
    path: /etc/default/grub
    regexp: "^GRUB_CMDLINE_LINUX"
    line: 'GRUB_CMDLINE_LINUX="crashkernel=auto rd.lvm.lv=centos/root rd.lvm.lv=centos/swap net.ifnames=0 biosdevname=0 rhgb quiet"'
    state: present
  notify:
    - recreate grub
